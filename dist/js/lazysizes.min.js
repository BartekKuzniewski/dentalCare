"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t){var e=function(l,D){"use strict";if(D.getElementsByClassName){var H,O,P=D.documentElement,c=l.Date,a=l.HTMLPictureElement,u="addEventListener",$="getAttribute",I=l[u],q=l.setTimeout,d=l.requestAnimationFrame||q,f=l.requestIdleCallback,j=/^picture$/i,o=["load","error","lazyincluded","_lazyloaded"],i={},G=Array.prototype.forEach,J=function t(e,n){return i[n]||(i[n]=new RegExp("(\\s|^)"+n+"(\\s|$)")),i[n].test(e[$]("class")||"")&&i[n]},K=function t(e,n){J(e,n)||e.setAttribute("class",(e[$]("class")||"").trim()+" "+n)},Q=function t(e,n){var i;(i=J(e,n))&&e.setAttribute("class",(e[$]("class")||"").replace(i," "))},U=function t(e,n,i){var a=i?u:"removeEventListener";i&&t(e,n),o.forEach(function(t){e[a](t,n)})},V=function t(e,n,i,a,o){var r=D.createEvent("CustomEvent");return i||(i={}),i.instance=H,r.initCustomEvent(n,!a,!o,i),e.dispatchEvent(r),r},X=function t(e,n){var i;!a&&(i=l.picturefill||O.pf)?(n&&n.src&&!e[$]("srcset")&&e.setAttribute("srcset",n.src),i({reevaluate:!0,elements:[e]})):n&&n.src&&(e.src=n.src)},Y=function t(e,n){return(getComputedStyle(e,null)||{})[n]},r=function t(e,n,i){for(i=i||e.offsetWidth;i<O.minSize&&n&&!e._lazysizesWidth;)i=n.offsetWidth,n=n.parentNode;return i},Z=function(){var i,a,n=[],o=[],r=n,s=function t(){var e=r;for(r=n.length?o:n,i=!0,a=!1;e.length;)e.shift()();i=!1},t=function t(e,n){i&&!n?e.apply(this,arguments):(r.push(e),a||(a=!0,(D.hidden?q:d)(s)))};return t._lsFlush=s,t}(),tt=function t(n,e){return e?function(){Z(n)}:function(){var t=this,e=arguments;Z(function(){n.apply(t,e)})}},t=function t(e){var n,i=0,a=O.throttleDelay,o=O.ricTimeout,r=function t(){n=!1,i=c.now(),e()},s=f&&o>49?function(){f(r,{timeout:o}),o!==O.ricTimeout&&(o=O.ricTimeout)}:tt(function(){q(r)},!0);return function(t){var e;(t=t===!0)&&(o=33),n||(n=!0,e=a-(c.now()-i),0>e&&(e=0),t||9>e?s():q(s,e))}},et=function t(e){var n,i,a=99,o=function t(){n=null,e()},r=function t(){var e=c.now()-i;a>e?q(t,a-e):(f||o)(o)};return function(){i=c.now(),n||(n=q(r,a))}};!function(){var t,e={lazyClass:"lazyload",loadedClass:"lazyloaded",loadingClass:"lazyloading",preloadClass:"lazypreload",errorClass:"lazyerror",autosizesClass:"lazyautosizes",srcAttr:"data-src",srcsetAttr:"data-srcset",sizesAttr:"data-sizes",minSize:40,customMedia:{},init:!0,expFactor:1.5,hFac:.8,loadMode:2,loadHidden:!0,ricTimeout:0,throttleDelay:125};O=l.lazySizesConfig||l.lazysizesConfig||{};for(t in e)t in O||(O[t]=e[t]);l.lazySizesConfig=O,q(function(){O.init&&n()})}();var e=function(){var d,f,m,y,n,z,v,g,p,h,b,C,A,E,r=/^img$/i,_=/^iframe$/i,w="onscroll"in l&&!/(gle|ing)bot/.test(navigator.userAgent),M=0,N=0,S=0,W=-1,x=function t(e){S--,e&&e.target&&U(e.target,t),(!e||0>S||!e.target)&&(S=0)},T=function t(e,n){var i,a=e,o="hidden"==Y(D.body,"visibility")||"hidden"!=Y(e.parentNode,"visibility")&&"hidden"!=Y(e,"visibility");for(g-=n,b+=n,p-=n,h+=n;o&&(a=a.offsetParent)&&a!=D.body&&a!=P;)o=(Y(a,"opacity")||1)>0,o&&"visible"!=Y(a,"overflow")&&(i=a.getBoundingClientRect(),o=h>i.left&&p<i.right&&b>i.top-1&&g<i.bottom+1);return o},e=function t(){var e,n,i,a,o,r,s,l,c,u=H.elements;if((y=O.loadMode)&&8>S&&(e=u.length)){n=0,W++,null==A&&("expand"in O||(O.expand=P.clientHeight>500&&P.clientWidth>500?500:370),C=O.expand,A=C*O.expFactor),A>N&&1>S&&W>2&&y>2&&!D.hidden?(N=A,W=0):N=y>1&&W>1&&6>S?C:M;for(;e>n;n++)if(u[n]&&!u[n]._lazyRace)if(w)if((l=u[n][$]("data-expand"))&&(r=1*l)||(r=N),c!==r&&(z=innerWidth+r*E,v=innerHeight+r,s=-1*r,c=r),i=u[n].getBoundingClientRect(),(b=i.bottom)>=s&&(g=i.top)<=v&&(h=i.right)>=s*E&&(p=i.left)<=z&&(b||h||p||g)&&(O.loadHidden||"hidden"!=Y(u[n],"visibility"))&&(f&&3>S&&!l&&(3>y||4>W)||T(u[n],r))){if(k(u[n]),o=!0,S>9)break}else!o&&f&&!a&&4>S&&4>W&&y>2&&(d[0]||O.preloadAfterLoad)&&(d[0]||!l&&(b||h||p||g||"auto"!=u[n][$](O.sizesAttr)))&&(a=d[0]||u[n]);else k(u[n]);a&&!o&&k(a)}},i=t(e),B=function t(e){K(e.target,O.loadedClass),Q(e.target,O.loadingClass),U(e.target,F),V(e.target,"lazyloaded")},a=tt(B),F=function t(e){a({target:e.target})},L=function t(e,n){try{e.contentWindow.location.replace(n)}catch(t){e.src=n}},R=function t(e){var n,i=e[$](O.srcsetAttr);(n=O.customMedia[e[$]("data-media")||e[$]("media")])&&e.setAttribute("media",n),i&&e.setAttribute("srcset",i)},s=tt(function(t,e,n,i,a){var o,r,s,l,c,u;(c=V(t,"lazybeforeunveil",e)).defaultPrevented||(i&&(n?K(t,O.autosizesClass):t.setAttribute("sizes",i)),r=t[$](O.srcsetAttr),o=t[$](O.srcAttr),a&&(s=t.parentNode,l=s&&j.test(s.nodeName||"")),u=e.firesLoad||"src"in t&&(r||o||l),c={target:t},u&&(U(t,x,!0),clearTimeout(m),m=q(x,2500),K(t,O.loadingClass),U(t,F,!0)),l&&G.call(s.getElementsByTagName("source"),R),r?t.setAttribute("srcset",r):o&&!l&&(_.test(t.nodeName)?L(t,o):t.src=o),a&&(r||l)&&X(t,{src:o})),t._lazyRace&&delete t._lazyRace,Q(t,O.lazyClass),Z(function(){(!u||t.complete&&t.naturalWidth>1)&&(u?x(c):S--,B(c))},!0)}),k=function t(e){var n,i=r.test(e.nodeName),a=i&&(e[$](O.sizesAttr)||e[$]("sizes")),o="auto"==a;(!o&&f||!i||!e[$]("src")&&!e.srcset||e.complete||J(e,O.errorClass)||!J(e,O.lazyClass))&&(n=V(e,"lazyunveilread").detail,o&&nt.updateElem(e,!0,e.offsetWidth),e._lazyRace=!0,S++,s(e,n,o,a,i))},o=function t(){if(!f){if(c.now()-n<999)return void q(t,999);var e=et(function(){O.loadMode=3,i()});f=!0,O.loadMode=3,i(),I("scroll",function(){3==O.loadMode&&(O.loadMode=2),e()},!0)}};return{_:function t(){n=c.now(),H.elements=D.getElementsByClassName(O.lazyClass),d=D.getElementsByClassName(O.lazyClass+" "+O.preloadClass),E=O.hFac,I("scroll",i,!0),I("resize",i,!0),l.MutationObserver?new MutationObserver(i).observe(P,{childList:!0,subtree:!0,attributes:!0}):(P[u]("DOMNodeInserted",i,!0),P[u]("DOMAttrModified",i,!0),setInterval(i,999)),I("hashchange",i,!0),["focus","mouseover","click","load","transitionend","animationend","webkitAnimationEnd"].forEach(function(t){D[u](t,i,!0)}),/d$|^c/.test(D.readyState)?o():(I("load",o),D[u]("DOMContentLoaded",i),q(o,2e4)),H.elements.length?(e(),Z._lsFlush()):i()},checkElems:i,unveil:k}}(),nt=function(){var i,o=tt(function(t,e,n,i){var a,o,r;if(t._lazysizesWidth=i,i+="px",t.setAttribute("sizes",i),j.test(e.nodeName||""))for(a=e.getElementsByTagName("source"),o=0,r=a.length;r>o;o++)a[o].setAttribute("sizes",i);n.detail.dataAttr||X(t,n.detail)}),a=function t(e,n,i){var t,a=e.parentNode;a&&(i=r(e,a,i),t=V(e,"lazybeforesizes",{width:i,dataAttr:!!n}),t.defaultPrevented||(i=t.detail.width,i&&i!==e._lazysizesWidth&&o(e,a,t,i)))},t=function t(){var e,n=i.length;if(n)for(e=0;n>e;e++)a(i[e])},e=et(t);return{_:function t(){i=D.getElementsByClassName(O.autosizesClass),I("resize",e)},checkElems:e,updateElem:a}}(),n=function t(){t.i||(t.i=!0,nt._(),e._())};return H={cfg:O,autoSizer:nt,loader:e,init:n,uP:X,aC:K,rC:Q,hC:J,fire:V,gW:r,rAF:Z}}}(t,t.document);t.lazySizes=e,"object"==("undefined"==typeof module?"undefined":_typeof(module))&&module.exports&&(module.exports=e)}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
